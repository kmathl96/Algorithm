# 크리보드
# DP

N = int(input()) # 버튼을 누르는 횟수

# dp[i] = 버튼을 i번 눌렀을 떄 화면에 출력된 A 개수의 최댓값
# 최소의 경우 A를 i번 출력하는 것이므로, 인덱스와 같은 값으로 초기화
dp = list(range(N+1))

# 6번까지는 A를 i번 출력하는 것이 최대의 값을 가짐 => 7부터 계산
for i in range(7,N+1):
    
    # 화면을 전체 선택(A)+복사(C)+붙여넣기(V) 하려면, 버튼을 3번 이상 눌러야 됨
    # => i-3 결과의 2배(ACV), i-4 결과의 3배(ACVV), i-5 결과의 4배(ACVVV) 중 최댓값을 가짐
    
    # i-5 이후의 경우(= 붙여넣기를 연달아 4번 이상 하는 경우)는 고려하지 않는 이유
    # 해당 dp값을 x라고 했을 때
    # 1) 전체 선택 후 복붙하면 (ACVVVV)
    #    => x + 4*x = 5x
    # 2) 버퍼에 있는 값을 붙여넣은 후 전체 선택 및 복붙하면 (VACVVV)
    #    버퍼에는 x/3 이상이 복사되어 있을 것이고
    #    x (V)=> x+x/3 = 4x/3 (ACVVV)=> 4x/3 + 4x/3*3 = 16x/3
    # 즉 연달아 복붙하는 경우(1)가 더 작으므로 고려하지 않음! (2의 경우는 i-3~i-5에서 계산됨)
    
    dp[i] = max(dp[i-3]*2,dp[i-4]*3,dp[i-5]*4)

print(dp[N])