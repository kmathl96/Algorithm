# 물병
# 구현, 그리디, 시뮬레이션, 비트마스킹

# N개의 물병을, K개 이하의 비어있지 않은 물병으로 만들기
N,K = map(int,input().split())
ans = 0 # 상점에서 사야 하는 물병 개수의 최솟값

# 물을 재분배한 뒤 비어잇지 않은 물병의 개수 = 이진수의 1의 개수
# => 1의 개수를 줄이기
# => 제일 오른쪽에 있는 1을 찾고, 해당 자리의 숫자를 더해서 그 자리 0 만들기
# (1의 개수가 K가 이하될 때까지 반복)
bin_ = bin(N) # 이진수로 바꿈
while bin_.count('1') > K: # K개 이하가 될 때까지 반복
    # 가장 오른쪽에 있는 1의 위치만큼 물병 구매
    ans += 2**(len(bin_)-bin_.rfind('1')-1)
    bin_ = bin(N+ans) # 이진수 갱신
print(ans)