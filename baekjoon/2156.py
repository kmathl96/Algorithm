# 포도주 시식
# 다이나믹 프로그래밍

n = int(input())
wine = [int(input()) for _ in range(n)]
dp = [0]*(n+1) # dp[i] : i번째 포도주 순서에서의 최댓값
dp[1] = wine[0] # 1번째 때는 해당 포도주를 마신 것이 최댓값
if n > 1: dp[2] = wine[0]+wine[1] # 2번째 때는 1~2번째 포도주를 마신 것이 최댓값
for i in range(3,n+1):
    # 1. 해당 포도주를 안 마시는 경우
    #    => 직전 순서의 최댓값(dp[i-1])이 최댓값
    # 2. 직전에 마시지 않고, 해당 포도주를 먹는 경우
    #    => 전전 순서의 최댓값(dp[i-2])에 해당 포도주의 양(wine[i-1])을 더한 것이 최댓값
    # 3. 직전 순서에서 마시고, 해당 포도주를 먹는 경우
    #    => 전전 순서에서 마시지 않았어야 하므로 (연속 3잔을 마실 수 없기 때문),
    #       전전전 순서의 최댓값(dp[i-3])에 직전과 현재의 포도주의 양(wine[i-2]+wine[i-1])을 더한 것이 최댓값
    dp[i] = max(dp[i-1], dp[i-2]+wine[i-1], dp[i-3]+wine[i-2]+wine[i-1]) # 위의 3가지 경우 중에서 제일 큰 값 저장
print(dp[n])