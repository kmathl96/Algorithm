# 점프 점프
# 다이나믹 프로그래밍

N = int(input()) # 미로의 크기
A = list(map(int,input().split())) # 미로의 각 칸에 쓰여진 정수
dp = [1001]*N # 각 칸에 갈 수 있는 최소 점프 수
dp[0] = 0 # 첫 칸에 위치해있으므로 0으로 초기화

# 각 칸에서 다음 칸으로 점프하면서 최소 점프 수 갱신
for i in range(N):
    for j in range(i+1,min(i+1+A[i],N)): # 점프할 칸의 인덱스
        # 현재 칸에서 점프하는 경우(dp[i]+1)와 비교하여 더 작은 수 저장
        dp[j] = min(dp[i]+1,dp[j])

# 가장 오른쪽 칸의 점프 수 출력
# 초기 값과 같다면, 이동할 수 없는 것이므로 -1 출력
print(-1 if dp[-1]==1001 else dp[-1])