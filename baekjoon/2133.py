# 타일 채우기
# 다이나믹 프로그래밍

N = int(input()) # 벽의 크기
dp = [0]*(N+1) # dp[i] = 2*i 크기의 벽을 타일로 채우는 경우의 수
dp[0] = 1 # 아무 것도 놓지 않음
for i in range(2,N+1,2): # 홀수인 경우는 불가능하므로 짝수만 고려
    # 1. 이전(i-2)의 경우에 3*2 벽을 채우기
    #   => 3*2 벽을 채우는 경우는 3가지 있음
    #   => dp[i-2] * 3
    # 2. 더 이전(i-j)의 경우, 3*j 벽을 채우기 (j는 짝수)
    #   => 3*j 벽을 채우는, 1.의 경우에서 다루지 못하는 케이스 2가지가 있음
    #   => dp[i-j] * 2
    dp[i] = dp[i-2]*3 + sum(dp[:i-2])*2
print(dp[N])